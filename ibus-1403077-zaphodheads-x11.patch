--- ibus-1.3.4/client/x11/main.c.zaphod-x11	2018-02-26 12:25:01.164973691 +0900
+++ ibus-1.3.4/client/x11/main.c	2018-02-26 22:16:18.326060997 +0900
@@ -1,7 +1,8 @@
 /* vim:set et sts=4: */
 /* ibus
  * Copyright (C) 2007-2010 Peng Huang <shawn.p.huang@gmail.com>
- * Copyright (C) 2007-2010 Red Hat, Inc.
+ * Copyright (C) 2017-2018 Takao Fujiwara <takao.fuijiwara1@gmail.com>
+ * Copyright (C) 2007-2018 Red Hat, Inc.
  *
  * main.c:
  *
@@ -109,6 +110,7 @@ static GHashTable     *_connections = NU
 static XIMS _xims = NULL;
 static gchar *_server_name = NULL;
 static gchar *_locale = NULL;
+static int _display_number;
 
 static gboolean _kill_daemon = FALSE;
 static gint     g_debug_level = 0;
@@ -497,6 +499,7 @@ static int
 xim_open (XIMS xims, IMOpenStruct *call_data)
 {
     X11ICONN *conn;
+    const gchar *display_name;
 
     LOG (1, "XIM_OPEN connect_id=%d",
                 call_data->connect_id);
@@ -505,6 +508,17 @@ xim_open (XIMS xims, IMOpenStruct *call_
                                              GINT_TO_POINTER ((gint) call_data->connect_id));
     g_return_val_if_fail (conn == NULL, 0);
 
+    display_name = g_getenv ("DISPLAY");
+    display_name = strchr (display_name, ':');
+    if (display_name) {
+        display_name++;
+        if (*display_name != '\0') {
+            int display_number = atoi (display_name);
+            if (display_number > 0)
+                _display_number = display_number;
+        }
+    }
+
     conn = g_slice_new0 (X11ICONN);
 
     g_hash_table_insert (_connections,
@@ -569,6 +583,11 @@ xim_close (XIMS ims, IMCloseStruct *call
 static void
 _xim_set_cursor_location (X11IC *x11ic)
 {
+    Screen *screen = NULL;
+    int screen_number = 0;
+    gchar *display_name;
+    IBusCursorLocation *cursor;
+
     g_return_if_fail (x11ic != NULL);
 
     GdkRectangle preedit_area = x11ic->preedit_area;
@@ -581,6 +600,8 @@ _xim_set_cursor_location (X11IC *x11ic)
         Window child;
 
         XGetWindowAttributes (GDK_DISPLAY(), w, &xwa);
+        screen = xwa.screen;
+        screen_number = XScreenNumberOfScreen (screen);
         if (preedit_area.x <= 0 && preedit_area.y <= 0) {
              XTranslateCoordinates (GDK_DISPLAY(), w,
                 xwa.root,
@@ -601,11 +622,16 @@ _xim_set_cursor_location (X11IC *x11ic)
         }
     }
 
-    ibus_input_context_set_cursor_location (x11ic->context,
-            preedit_area.x,
-            preedit_area.y,
-            preedit_area.width,
-            preedit_area.height);
+    display_name = g_strdup_printf (":%d.%d", _display_number, screen_number);
+    cursor = ibus_cursor_location_new ("x", preedit_area.x,
+                                       "y", preedit_area.y,
+                                       "width", preedit_area.width,
+                                       "height", preedit_area.height,
+                                       "display-name", display_name,
+                                       NULL);
+    g_free (display_name);
+    ibus_input_context_set_cursor_object (x11ic->context, cursor);
+    g_object_unref (cursor);
 }
 
 
